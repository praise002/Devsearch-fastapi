"""added profileskill

Revision ID: ba0731fa7242
Revises: 17c3345f65c9
Create Date: 2025-07-27 20:28:30.164656

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # NEW
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ba0731fa7242'
down_revision: Union[str, None] = '17c3345f65c9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profileskill',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('profile_id', sa.Uuid(), nullable=True),
    sa.Column('skill_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profile.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('message', 'recipient_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('otp', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('profile', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_unique_constraint(None, 'profile', ['user_id'])
    op.add_column('project', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('project', 'owner_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('project', 'source_link',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('project', 'demo_link',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.alter_column('review', 'project_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('review', 'profile_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_unique_constraint(None, 'skill', ['name'])
    op.drop_constraint('skill_profile_id_fkey', 'skill', type_='foreignkey')
    op.drop_column('skill', 'created_at')
    op.drop_column('skill', 'profile_id')
    op.drop_column('skill', 'description')
    op.alter_column('tag', 'project_id',
               existing_type=sa.UUID(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tag', 'project_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.add_column('skill', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('skill', sa.Column('profile_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('skill', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.create_foreign_key('skill_profile_id_fkey', 'skill', 'profile', ['profile_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'skill', type_='unique')
    op.alter_column('review', 'profile_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('review', 'project_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('project', 'demo_link',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('project', 'source_link',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.alter_column('project', 'owner_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_column('project', 'created_at')
    op.drop_constraint(None, 'profile', type_='unique')
    op.alter_column('profile', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('otp', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('message', 'recipient_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_table('profileskill')
    # ### end Alembic commands ###
